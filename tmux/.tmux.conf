# vi: ft=conf  :
# Based off of: https://github.com/lukaszkorecki/DotFiles/blob/master/tmux.conf

# Possible fix for slow neovim
# set -s escape-time 0

# Use a normal bash shell instead of a login shell; this stops
# ~/.profile from being sourced, and instead just sources ~/.bashrc.
set-option -g default-command "/bin/bash"
# Use fish shell instead of bash, if it's installed
if-shell "test -e /usr/bin/fish" "set-option -g default-command '/usr/bin/fish'"

# Status bar colors
set-option -g history-limit 700000
set-option -g renumber-windows on
set -g status-justify centre

# Start window and pane index at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Begin Old prefix
# set -g prefix C-f
# 
# bind C-f send-prefix
# bind-key f send-prefix
# End Old prefix

# Begin New prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Send the prefix to client inside window
bind-key -n C-t send-prefix
# End New prefix

set -g default-terminal "screen-256color"

# Clipboard
# bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
#
# The change in syntax here is documented in a comment by alaska here:
# https://github.com/tmux/tmux/issues/754
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# resize the viewport only if an active session is the smallets
setw -g aggressive-resize on

# fix wait time for escape (helps with tmux and vim)
set -s escape-time 0

# start indexing windows from 1, just like tabs
#set -g base-index 1
#setw -g pane-base-index 1

setw -g automatic-rename on

# window titles
set -g set-titles on

# key bindings
bind R source-file ~/.tmux.conf

# Kill current session and switch to the previous session
# source: http://unix.stackexchange.com/a/58616
bind-key X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"

# vimafia
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U
bind-key b break-pane

# clear pane content and history
# bind -n C-k send-keys -R \; clear-history
# Source is the comment by ivan on Dec 10 2017: https://stackoverflow.com/a/11525159
bind C-k send-keys -R C-l \; clear-history

# move windows left/right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# new window
bind-key C-c new-window
bind-key c new-window

bind-key p previous-window

# Split windows like in my vim setup
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"

# resize panes like vim
bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r + resize-pane -U 10
bind-key -r = resize-pane -D 10

# mouse
set-window-option -g mouse on
set -g mouse on

# Statusbar settings

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 250

# notify about activities
setw -g monitor-activity on
set -g visual-activity on

# status bar configuration

# TODO: use run-shell to run a script that only add "#H:" to the status bar if
# the tmux session is not nested (by checking if TMUX is set).
# A good example using no external scripts is: https://stackoverflow.com/a/40902312
set-option -g status-left ' #(whoami)   #H:'
set-option -g status-right '%h %d %Y - %l:%M %p'

# set-option -g status-right-length 1000
set-option -g status-left-length 60

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-style bg=colour235,fg=yellow,dim,bg=colour235,fg=colour136,default

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour240

# message text
set-option -g message-style bg=colour235,fg=colour166

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

## Plugins
# Fetch tmux plugin manager
run-shell 'tmux setenv -g TPM_DIR ~/.tmux/plugins/tpm'
if-shell -b '[ ! -e "$TPM_DIR/tpm" ]' \
	'run-shell "git clone https://github.com/tmux-plugins/tpm \"$TPM_DIR\""; \
	 display-message "Successfully cloned tmux plugin manager repo."'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

run-shell 'tmux setenv -g save-complete-history-key Super_L-P'
set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
