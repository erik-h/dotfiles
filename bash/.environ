# If a variable set in our .environ file is already set, we've already sourced
# this file (probably, unless something else set it...)!
# [ -n "$__ENVIRON_SET__"] && return
# export __ENVIRON_SET__="SET"

first_installed() {
	for cmd in "$@"; do
		if command -v "$cmd" > /dev/null 2>&1; then
			echo "$cmd"
			return 0
		fi
	done

	echo ""
	return 1
}

# Make sure gpg pinentry will work from a tty
export GPG_TTY="$(tty)"

# Set TERM so we don't get weird stuff happening in tmux
export TERM=screen-256color

## Set some default programs
export TERMINAL="$(first_installed "termite" "gnome-terminal" "xterm")"
export EDITOR="vim"
export BROWSER="firefox"
export MANPAGER="/bin/sh -c \"col -b | vim -c 'set ft=man ts=8 nomod nolist nonu noma' -\""

# Hide commands prefixed with spaces
export HISTCONTROL="ignorespace"
# Include execution time in command history
export HISTTIMEFORMAT='%F %T '

# Make sure default config folder is set
export XDG_CONFIG_HOME="$HOME/.config"

## Language specific environment variables
# Android
export ANDROID_HOME="$HOME/opt/Android/sdk"

## Program specific environment variables
# load custom ranger config file, not the default
export RANGER_LOAD_DEFAULT_RC=false
# set location for ripgrep config file
export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep/ripgreprc

# password-store
export PASSWORD_STORE_ENABLE_EXTENSIONS="true"

## PATH
# Binaries installed with `snap`
[ -d "/snap/bin" ] && PATH="/snap/bin:$PATH"
# General binaries
[ -d "$HOME/.local/bin" ] && PATH="$HOME/.local/bin:$PATH"
[ -d "$HOME/.local/sbin" ] && PATH="$HOME/.local/sbin:$PATH"
[ -d "$HOME/.private-scripts" ] && PATH="$HOME/.private-scripts:$PATH"
[ -d "$HOME/bin" ] && PATH="$HOME/bin:$PATH"
# Language specific binaries
# Nodejs
[ -d "$HOME/node_modules/.bin" ] && PATH="$HOME/node_modules/.bin:$PATH"
# Python
[ -d "$HOME/.poetry/bin" ] && PATH="$HOME/.poetry/bin:$PATH"
# Rust
[ -d "$HOME/.cargo/bin" ] && PATH="$HOME/.cargo/bin:$PATH"
# Ruby
[ -d "$HOME/.rvm/bin" ] && PATH="$HOME/.rvm/bin:$PATH"
[ -s "$HOME/.rvm/scripts/rvm" ] && . "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

## Library paths
# TODO: grep for /usr/local/lib before trying to add it so I don't get a double entry
LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH" # Apparently this directory isn't always included by default
# Include library paths for locally installed stuff
[ -d "$HOME/.local/lib/" ] && LD_LIBRARY_PATH="$HOME/.local/lib/:$LD_LIBRARY_PATH" LIBRARY_PATH="$HOME/.local/lib/:$LIBRARY_PATH"

export LD_LIBRARY_PATH
export LIBRARY_PATH
export PATH

# Use a dmenu password prompt script
# [ -f "$HOME/.private-scripts/dpass" ] && export SUDO_ASKPASS="$HOME/.private-scripts/dpass"

# If we have a faster searcher than `find` installed, use it for fuzzy
# file finding
if command -v rg > /dev/null 2>&1; then
	export FZF_DEFAULT_COMMAND="rg --hidden --files"
elif command -v ag > /dev/null 2>&1; then
	export FZF_DEFAULT_COMMAND="ag --hidden --ignore .git -g ''"
fi

[ -f "$HOME/.local_environ" ] && . "$HOME/.local_environ"
